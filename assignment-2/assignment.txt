TODOs:
+ unit testing
+ recheck style and general cleanup
+ add doc strings to functions (pre-conditions, post-conditions, invariants)

1. + Write a function that swaps (exchanges the values of two integers). 
   + Use int* as the argument type.
   + Write a second swap function using a reference (i.e., int&) as the argument type.
2. + Define a table of the names of months of the year and the number of days in each month.
   + Write out that table to a stringstream.
   + Do this twice; once using an array of char for the names and an array for the number of days and
   a second time using an array of structures, with each structure holding the name of a month and
   the number of days in it.
3. + Write a function cat() that takes two C-style strings (i.e., char*) arguments and returns a C-style
   string that is the concatenation of the arguments. Use new to find store for the result.
   + Write a second function cat that takes two const std::string& arguments and returns a std::string that is a concatenation of the arguments. 
   + The std::string version does not require new.
   + Which is the better approach? Explain your rationale for which is the better approach?
